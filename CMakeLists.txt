cmake_minimum_required(VERSION 3.16.3)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
  message(FATAL_ERROR "In-source builds are not allowed")
endif()

set(PROJECT_NAME          "kra_gdk_pixbuf")
set(PROJECT_VERSION       "1.0")
set(PROJECT_DESCRIPTION   "GDK pixbuf loader module for Krita documents")
set(PROJECT_COPYRIGHT     "Copyright (C) ${CURRENT_YEAR}")
set(PROJECT_CONTACT       "Gregg Jansen van VÃ¼ren <vurentjie@gmail.com>")

project(${PROJECT_NAME} LANGUAGES C)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release")
endif()

IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  SET(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

set(BUILD_SHARED_LIBS ON)
set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

include(CPack)
include(GNUInstallDirs)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/bin)

# Disable for now
# set(CPACK_PACKAGE_NAME              ${PROJECT_NAME})
# set(CPACK_PACKAGE_CONTACT           ${PROJECT_CONTACT})
# set(CPACK_PACKAGE_DESCRIPTION       ${PROJECT_DESCRIPTION})
# set(CPACK_PACKAGE_INSTALL_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
# set(CPACK_PACKAGE_VERSION           ${PROJECT_VERSION})
# set(CPACK_RESOURCE_FILE_LICENSE     "${CMAKE_SOURCE_DIR}/LICENSE")
# set(CPACK_RESOURCE_FILE_README      "${CMAKE_SOURCE_DIR}/README.md")
# set(CPACK_VERBATIM_VARIABLES        YES)
# set(CPACK_GENERATOR                 TGZ)
# set(CPACK_CMAKE_GENERATOR           Ninja)

add_subdirectory(src)
